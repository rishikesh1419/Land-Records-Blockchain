{
  "_args": [
    [
      "connect@https://registry.npmjs.org/connect/-/connect-3.0.2.tgz",
      "/home/rishikesh/Desktop/land-records/land-records/node_modules/tomahawk"
    ]
  ],
  "_from": "connect@latest",
  "_id": "connect@3.0.2",
  "_inCache": true,
  "_location": "/tomahawk/connect",
  "_phantomChildren": {},
  "_requested": {
    "name": "connect",
    "raw": "connect@https://registry.npmjs.org/connect/-/connect-3.0.2.tgz",
    "rawSpec": "https://registry.npmjs.org/connect/-/connect-3.0.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/connect/-/connect-3.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/tomahawk"
  ],
  "_resolved": "https://registry.npmjs.org/connect/-/connect-3.0.2.tgz",
  "_shasum": "1f90b4672fe009fa2876df860442d30db18609a2",
  "_shrinkwrap": null,
  "_spec": "connect@https://registry.npmjs.org/connect/-/connect-3.0.2.tgz",
  "_where": "/home/rishikesh/Desktop/land-records/land-records/node_modules/tomahawk",
  "author": {
    "email": "tj@vision-media.ca",
    "name": "TJ Holowaychuk",
    "url": "http://tjholowaychuk.com"
  },
  "bugs": {
    "url": "https://github.com/senchalabs/connect/issues"
  },
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "Jonathan Ong",
      "email": "me@jongleberry.com"
    },
    {
      "name": "Tim Caswell",
      "email": "tim@creationix.com"
    }
  ],
  "dependencies": {
    "debug": "1.0.3",
    "finalhandler": "0.0.2",
    "parseurl": "~1.1.3",
    "utils-merge": "1.0.0"
  },
  "description": "High performance middleware framework",
  "devDependencies": {
    "istanbul": "0.3.0",
    "mocha": "~1.20.0",
    "should": "~4.0.0",
    "supertest": "~0.13.0"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "homepage": "https://github.com/senchalabs/connect#readme",
  "keywords": [
    "connect",
    "framework",
    "middleware",
    "rack",
    "web"
  ],
  "license": "MIT",
  "name": "connect",
  "optionalDependencies": {},
  "readme": "# Connect\n\n[![NPM version](https://badge.fury.io/js/connect.svg)](http://badge.fury.io/js/connect)\n[![Build Status](https://travis-ci.org/senchalabs/connect.svg?branch=master)](https://travis-ci.org/senchalabs/connect)\n[![Coverage Status](https://img.shields.io/coveralls/senchalabs/connect.svg?branch=master)](https://coveralls.io/r/senchalabs/connect)\n\n  Connect is an extensible HTTP server framework for [node](http://nodejs.org) using \"plugins\" known as _middleware_.\n\n```js\nvar connect = require('connect')\nvar http = require('http')\n\nvar app = connect()\n\n// gzip/deflate outgoing responses\nvar compression = require('compression')\napp.use(compression())\n\n// store session state in browser cookie\nvar cookieSession = require('cookie-session')\napp.use(cookieSession({\n    keys: ['secret1', 'secret2']\n}))\n\n// parse urlencoded request bodies into req.body\nvar bodyParser = require('body-parser')\napp.use(bodyParser.urlencoded())\n\n// respond to all requests\napp.use(function(req, res){\n  res.end('Hello from Connect!\\n');\n})\n\n//create node.js http server and listen on port\nhttp.createServer(app).listen(3000)\n```\n\n## Connect 3.0\n\nConnect 3.0 is in progress in the `master` branch. The main changes in Connect are:\n\n- Middleware will be moved to their own repositories in the [expressjs](http://github.com/expressjs) organization\n- All node patches will be removed - all middleware _should_ work without Connect and with similar frameworks like [restify](https://github.com/mcavage/node-restify)\n- Node `0.8` is no longer supported\n- The website documentation has been removed - view the markdown readmes instead\n\nIf you would like to help maintain these middleware, please contact a [member of the expressjs team](https://github.com/orgs/expressjs/members).\n\n## Middleware\n\nThese middleware and libraries are officially supported by the Connect/Express team:\n\n  - [body-parser](https://github.com/expressjs/body-parser) - previous `bodyParser`, `json`, and `urlencoded`. You may also be interested in:\n    - [body](https://github.com/raynos/body)\n    - [co-body](https://github.com/visionmedia/co-body)\n    - [raw-body](https://github.com/stream-utils/raw-body)\n  - [compression](https://github.com/expressjs/compression) - previously `compress`\n  - [connect-timeout](https://github.com/expressjs/timeout) - previously `timeout`\n  - [cookie-parser](https://github.com/expressjs/cookie-parser) - previously `cookieParser`\n  - [cookie-session](https://github.com/expressjs/cookie-session) - previously `cookieSession`\n  - [csurf](https://github.com/expressjs/csurf) - previousy `csrf`\n  - [errorhandler](https://github.com/expressjs/errorhandler) - previously `error-handler`\n  - [express-session](https://github.com/expressjs/session) - previously `session`\n  - [method-override](https://github.com/expressjs/method-override) - previously `method-override`\n  - [morgan](https://github.com/expressjs/morgan) - previously `logger`\n  - [response-time](https://github.com/expressjs/response-time) - previously `response-time`\n  - [serve-favicon](https://github.com/expressjs/serve-favicon) - previously `favicon`\n  - [serve-index](https://github.com/expressjs/serve-index) - previousy `directory`\n  - [serve-static](https://github.com/expressjs/serve-static) - previously `static`\n  - [vhost](https://github.com/expressjs/vhost) - previously `vhost`\n\nMost of these are exact ports of their Connect 2.x equivalents. The primary exception is `cookie-session`.\n\nSome middleware previously included with Connect are no longer supported by the Connect/Express team, are replaced by an alternative module, or should be superseded by a better module. Use one of these alternatives instead:\n\n  - `cookieParser`\n    - [cookies](https://github.com/jed/cookies) and [keygrip](https://github.com/jed/keygrip)\n  - `limit`\n    - [raw-body](https://github.com/stream-utils/raw-body)\n  - `multipart`\n    - [connect-multiparty](https://github.com/superjoe30/connect-multiparty)\n    - [connect-busboy](https://github.com/mscdex/connect-busboy)\n  - `query`\n    - [qs](https://github.com/visionmedia/node-querystring)\n  - `staticCache`\n    - [st](https://github.com/isaacs/st)\n    - [connect-static](https://github.com/andrewrk/connect-static)\n\nCheckout [http-framework](https://github.com/Raynos/http-framework/wiki/Modules) for many other compatible middleware! \n\n## Running Tests\n\n```bash\nnpm install\nnpm test\n```\n\n## Contributors\n\n https://github.com/senchalabs/connect/graphs/contributors\n\n## Node Compatibility\n\n  - Connect `< 1.x` - node `0.2`\n  - Connect `1.x` - node `0.4`\n  - Connect `< 2.8` - node `0.6`\n  - Connect `>= 2.8 < 3` - node `0.8`\n  - Connect `>= 3` - node `0.10`\n\n## License\n\nView the [LICENSE](https://github.com/senchalabs/connect/blob/master/LICENSE) file.\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/senchalabs/connect.git"
  },
  "scripts": {
    "test": "mocha --require test/support/env --reporter dot --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"
  },
  "version": "3.0.2"
}
